class BlinkyAI : ZilchComponent
{
  [Property] var MoveDistanceX : Real3 = Real3(0.9,0.0,0.0);
  [Property] var MoveDistanceY : Real3 = Real3(0.0,0.9,0.0);
  [Property] var MoveSpeed : Real = 1;
  [Property]
  var PacMan : CogPath = null;
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var result : Real = 0.0;
    var result2 : Real = 0.0;
    var result3 : Real = 0.0;
    result = this.PacMan.Transform.Translation.X - this.Owner.Transform.Translation.X;
    result2 = this.PacMan.Transform.Translation.Y - this.Owner.Transform.Translation.Y;
    if(result > 0.1)
    {
      Actions.Property(this.Owner.Actions,@this.Owner.Transform.Translation, this.Owner.Transform.Translation + this.MoveDistanceX,this.MoveSpeed, Ease.Linear);
    }
    if(result < 0.1)
    {
      Actions.Property(this.Owner.Actions,@this.Owner.Transform.Translation, this.Owner.Transform.Translation - this.MoveDistanceX,this.MoveSpeed, Ease.Linear);
    }
    if(result2 > 0.1)
    {
      Actions.Property(this.Owner.Actions,@this.Owner.Transform.Translation, this.Owner.Transform.Translation + this.MoveDistanceY,this.MoveSpeed, Ease.Linear);
    }
    if(result2 < 0.1)
    {
      Actions.Property(this.Owner.Actions,@this.Owner.Transform.Translation, this.Owner.Transform.Translation - this.MoveDistanceY,this.MoveSpeed, Ease.Linear);
    }
  }
}
